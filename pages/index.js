import { useState } from "react";
import Head from "next/head";
import { Inter } from "@next/font/google";
const inter = Inter({ subsets: ["latin"] });
import styles from "@/styles/Home.module.css";
import "react-json-pretty/themes/monikai.css";
import JSONPretty from "react-json-pretty";

// ** MUI Imports
import { Box } from "@mui/system";
import CircleIcon from "@mui/icons-material/Circle";
import {
  ButtonGroup,
  CircularProgress,
  Grid,
  ToggleButton,
} from "@mui/material";

import axios from "axios";
import PeopleListREST from "@/components/PeopleListREST";
import PeopleListGraphQL from "@/components/PeopleListGraphQL";
import Image from "next/image";

export default function Home() {
  // ** For Fun :D
  const [fly, setFly] = useState(false);

  const [loading, setLoading] = useState(false);
  const [selectedBtn, setSelectedBtn] = useState("");
  const [data, setData] = useState({});

  // ** RESTful API fetch data
  const restSelectHandler = () => {
    setLoading(true);
    setSelectedBtn("rest");

    const URL = "https://swapi.dev/api/" + "people";

    axios
      .get(URL)
      .then((res) => setData(res.data))
      .then(() => setLoading(false));
  };

  // ** GraphQL fetch data
  const query = `
query {
  allPeople {
    people {
      gender
      name
      height
      mass
      birthYear
    }
  }
}
`;
  const graphSelectHandler = () => {
    setLoading(true);
    setSelectedBtn("graph");

    const URL = "https://swapi-graphql.netlify.app/.netlify/functions/index";
    axios
      .post(URL, {
        query,
      })
      .then((res) => setData(res.data))
      .then(() => setLoading(false));
  };

  return (
    <>
      <Head>
        <title>SWAPI GraphQL</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Grid container spacing={5}>
          <Grid item xs={7}>
            <Grid container spacing={5}>
              <Grid item xs={12}>
                <ButtonGroup>
                  <ToggleButton
                    value="rest"
                    onClick={restSelectHandler}
                    color="info"
                    selected={selectedBtn === "rest"}
                  >
                    Fetch REST
                  </ToggleButton>
                  <ToggleButton
                    value="graph"
                    onClick={graphSelectHandler}
                    color="error"
                    selected={selectedBtn === "graph"}
                  >
                    Fetch GraphQL
                  </ToggleButton>
                </ButtonGroup>
              </Grid>
              <Grid item xs={12}>
                {loading ? (
                  <CircularProgress />
                ) : selectedBtn === "rest" ? (
                  <PeopleListREST data={data} />
                ) : selectedBtn === "graph" ? (
                  <PeopleListGraphQL data={data} />
                ) : null}
              </Grid>
            </Grid>
          </Grid>
          <Grid item xs={5} sx={{ pr: 5 }}>
            <Box
              className="relative"
              sx={{
                p: 2,
                pt: 1,
                display: "flex",
                flexDirection: "column",
              }}
            >
              <div className="layer" />
              <div
                onClick={() => {
                  setFly(true);
                }}
                className={fly ? "absolute fly" : "absolute"}
              >
                <h1 className="strokeme">JEKÄ°RDEK ðŸ’›</h1>
                <Image
                  src="/star-wars.png"
                  alt="star-wars"
                  width={180}
                  height={180}
                />
              </div>
              <Box sx={{ ml: "auto" }} className="z-index-front">
                <CircleIcon sx={{ fontSize: "0.7rem" }} color="info" />
                <CircleIcon sx={{ fontSize: "0.7rem" }} color="success" />
                <CircleIcon sx={{ fontSize: "0.7rem" }} color="error" />
              </Box>
              <div className="z-index-front">
                {loading ? <CircularProgress /> : <JSONPretty data={data} />}
              </div>
            </Box>
          </Grid>
        </Grid>
      </main>
    </>
  );
}
